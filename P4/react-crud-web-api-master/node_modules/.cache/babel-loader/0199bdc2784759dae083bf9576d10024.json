{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonathan\\\\Desktop\\\\cs137-team11\\\\react-crud-web-api-master\\\\src\\\\components\\\\add-phone.component.js\";\nimport React, { Component } from \"react\";\nimport PhoneDataService from \"../services/phone.service\";\nimport \"./phones-list.component.css\";\nexport default class AddPhone extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeModel = this.onChangeModel.bind(this);\n    this.onChangeColor = this.onChangeColor.bind(this);\n    this.onChangeMemory = this.onChangeMemory.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeImageUrl = this.onChangeImageUrl.bind(this);\n    this.onChangeNumUnits = this.onChangeNumUnits.bind(this); //this.savePhone = this.savePhone.bind(this);\n\n    this.newPhone = this.newPhone.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n    this.state = {\n      id: null,\n      model: \"\",\n      color: \"\",\n      memory: \"\",\n      price: null,\n      description: \"\",\n      category: \"\",\n      image_url: \"\",\n      numUnits: null,\n      //published: false,\n      submitted: false,\n      error: \"\"\n    };\n  }\n\n  onChangeModel(e) {\n    this.setState({\n      model: e.target.value\n    });\n  }\n\n  onChangeColor(e) {\n    this.setState({\n      color: e.target.value\n    });\n  }\n\n  onChangeMemory(e) {\n    this.setState({\n      memory: e.target.value\n    });\n  }\n\n  onChangePrice(e) {\n    this.setState({\n      price: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeCategory(e) {\n    this.setState({\n      category: e.target.value\n    });\n  }\n\n  onChangeImageUrl(e) {\n    this.setState({\n      image_url: e.target.value\n    });\n  }\n\n  onChangeNumUnits(e) {\n    this.setState({\n      numUnits: e.target.value\n    });\n  }\n  /*\n    savePhone() {\n      let data = {\n        model: this.state.model,\n        color: this.state.color,\n        memory: this.state.memory,\n        price: this.state.price,\n        description: this.state.description,\n        category: this.state.category,\n        image_url: this.state.image_url,\n        numUnits: this.state.numUnits\n      };\n  \n      PhoneDataService.create(data)\n        .then(response => {\n          this.setState({\n            id: response.data.id,\n            model: response.data.model,\n            color: response.data.color,\n            memory: response.data.memory,\n            price: response.data.price,\n            description: response.data.description,\n            category: response.data.category,\n            image_url: response.data.image_url,\n            numUnits: response.data.numUnits,\n            //published: response.data.published,\n  \n            submitted: true\n          });\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  */\n\n\n  newPhone() {\n    this.setState({\n      id: null,\n      model: \"\",\n      color: \"\",\n      memory: \"\",\n      price: null,\n      description: \"\",\n      category: \"\",\n      image_url: \"\",\n      numUnits: null,\n      submitted: false\n    });\n  }\n\n  handleValidation() {\n    const {\n      model,\n      color,\n      memory,\n      price,\n      description,\n      category,\n      image_url,\n      numUnits\n    } = this.state; // only each block with generate error\n\n    if (!model) {\n      this.setState({\n        error: 'Model can not be empty!'\n      });\n    } else if (!color) {\n      this.setState({\n        error: 'Color can not be empty!'\n      });\n    } else if (!memory || isNaN(memory)) {\n      this.setState({\n        error: 'Memory is not valid!'\n      });\n    } else if (!price || isNaN(price)) {\n      this.setState({\n        error: 'Price is not valid!'\n      });\n    } else if (!description) {\n      this.setState({\n        error: 'Description can not be empty!'\n      });\n    } else if (!category) {\n      this.setState({\n        error: 'Category can not be empty!'\n      });\n    } else if (!image_url) {\n      this.setState({\n        error: 'Image url can not be empty!'\n      });\n    } else if (!numUnits || isNaN(numUnits)) {\n      this.setState({\n        error: 'Number of units is not valid!'\n      });\n    } else {\n      this.setState({\n        error: \"\"\n      });\n      let data = {\n        model: this.state.model,\n        color: this.state.color,\n        memory: this.state.memory,\n        price: this.state.price,\n        description: this.state.description,\n        category: this.state.category,\n        image_url: this.state.image_url,\n        numUnits: this.state.numUnits\n      };\n      PhoneDataService.create(data).then(response => {\n        this.setState({\n          id: response.data.id,\n          model: response.data.model,\n          color: response.data.color,\n          memory: response.data.memory,\n          price: response.data.price,\n          description: response.data.description,\n          category: response.data.category,\n          image_url: response.data.image_url,\n          numUnits: response.data.numUnits,\n          //published: response.data.published,\n          submitted: true\n        });\n        console.log(response.data);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"border-box\",\n      className: \"submit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.submitted ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"You submitted successfully!\"), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.newPhone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Add\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Model\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter model\",\n      id: \"model\",\n      required: true,\n      value: this.state.model,\n      onChange: this.onChangeModel,\n      name: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Color\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter color\",\n      id: \"color\",\n      required: true,\n      value: this.state.color,\n      onChange: this.onChangeColor,\n      name: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"memory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Memory\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter memory\",\n      id: \"memory\",\n      required: true,\n      value: this.state.memory,\n      onChange: this.onChangeMemory,\n      name: \"memory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter price\",\n      id: \"price\",\n      required: true,\n      value: this.state.price,\n      onChange: this.onChangePrice,\n      name: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter description\",\n      id: \"description\",\n      required: true,\n      value: this.state.description,\n      onChange: this.onChangeDescription,\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter category\",\n      id: \"category\",\n      required: true,\n      value: this.state.category,\n      onChange: this.onChangeCategory,\n      name: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"image_url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Image Url\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter image url\",\n      id: \"image_url\",\n      required: true,\n      value: this.state.image_url,\n      onChange: this.onChangeImageUrl,\n      name: \"image_url\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"numUnits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Number of units available\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Enter number of units\",\n      id: \"numUnits\",\n      required: true,\n      value: this.state.numUnits,\n      onChange: this.onChangeNumUnits,\n      name: \"numUnits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleValidation,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Submit\")), this.state.error !== '' ? React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, this.state.error) : '');\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jonathan/Desktop/cs137-team11/react-crud-web-api-master/src/components/add-phone.component.js"],"names":["React","Component","PhoneDataService","AddPhone","constructor","props","onChangeModel","bind","onChangeColor","onChangeMemory","onChangePrice","onChangeDescription","onChangeCategory","onChangeImageUrl","onChangeNumUnits","newPhone","handleValidation","state","id","model","color","memory","price","description","category","image_url","numUnits","submitted","error","e","setState","target","value","isNaN","data","create","then","response","console","log","catch","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PhoneDataService from \"../services/phone.service\";\nimport \"./phones-list.component.css\"\n\nexport default class AddPhone extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeModel = this.onChangeModel.bind(this);\n    this.onChangeColor = this.onChangeColor.bind(this);\n    this.onChangeMemory = this.onChangeMemory.bind(this);\n    this.onChangePrice = this.onChangePrice.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeCategory = this.onChangeCategory.bind(this);\n    this.onChangeImageUrl = this.onChangeImageUrl.bind(this);\n    this.onChangeNumUnits = this.onChangeNumUnits.bind(this);\n    //this.savePhone = this.savePhone.bind(this);\n    this.newPhone = this.newPhone.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n\n    this.state = {\n      id: null,\n      model: \"\",\n      color: \"\",\n      memory: \"\",\n      price: null,\n      description: \"\",\n      category: \"\",\n      image_url: \"\",\n      numUnits: null,\n      //published: false,\n      submitted: false,\n      error: \"\"\n    };\n  }\n\n  onChangeModel(e) {\n    this.setState({\n      model: e.target.value\n    });\n  }\n\n  onChangeColor(e) {\n    this.setState({\n      color: e.target.value\n    });\n  }\n\n  onChangeMemory(e) {\n    this.setState({\n      memory: e.target.value\n    });\n  }\n\n  onChangePrice(e) {\n    this.setState({\n      price: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeCategory(e) {\n    this.setState({\n      category: e.target.value\n    });\n  }\n\n  onChangeImageUrl(e) {\n    this.setState({\n      image_url: e.target.value\n    });\n  }\n\n  onChangeNumUnits(e) {\n    this.setState({\n      numUnits: e.target.value\n    });\n  }\n/*\n  savePhone() {\n    let data = {\n      model: this.state.model,\n      color: this.state.color,\n      memory: this.state.memory,\n      price: this.state.price,\n      description: this.state.description,\n      category: this.state.category,\n      image_url: this.state.image_url,\n      numUnits: this.state.numUnits\n    };\n\n    PhoneDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          model: response.data.model,\n          color: response.data.color,\n          memory: response.data.memory,\n          price: response.data.price,\n          description: response.data.description,\n          category: response.data.category,\n          image_url: response.data.image_url,\n          numUnits: response.data.numUnits,\n          //published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n*/\n  newPhone() {\n    this.setState({\n      id: null,\n      model: \"\",\n      color: \"\",\n      memory: \"\",\n      price: null,\n      description: \"\",\n      category: \"\",\n      image_url: \"\",\n      numUnits: null,\n\n      submitted: false\n    });\n  }\n\n  handleValidation () {\n    const { model, color, memory, price, description, category, image_url, numUnits } = this.state;\n    // only each block with generate error\n    if (!model) {\n      this.setState({ error: 'Model can not be empty!' });\n    } else if (!color) {\n      this.setState({ error: 'Color can not be empty!' });\n    } else if (!memory || isNaN(memory)) {\n      this.setState({ error: 'Memory is not valid!' });\n    }else if (!price || isNaN(price)) {\n      this.setState({ error: 'Price is not valid!' });\n    } else if (!description) {\n      this.setState({ error: 'Description can not be empty!' });\n    }else if (!category) {\n      this.setState({ error: 'Category can not be empty!' });\n    }else if (!image_url) {\n      this.setState({ error: 'Image url can not be empty!' });\n    }else if (!numUnits || isNaN(numUnits)) {\n      this.setState({ error: 'Number of units is not valid!' });\n    } else {\n      this.setState({error: \"\"})\n\n        let data = {\n          model: this.state.model,\n          color: this.state.color,\n          memory: this.state.memory,\n          price: this.state.price,\n          description: this.state.description,\n          category: this.state.category,\n          image_url: this.state.image_url,\n          numUnits: this.state.numUnits\n        };\n\n        PhoneDataService.create(data)\n            .then(response => {\n              this.setState({\n                id: response.data.id,\n                model: response.data.model,\n                color: response.data.color,\n                memory: response.data.memory,\n                price: response.data.price,\n                description: response.data.description,\n                category: response.data.category,\n                image_url: response.data.image_url,\n                numUnits: response.data.numUnits,\n                //published: response.data.published,\n\n                submitted: true\n              });\n              console.log(response.data);\n            })\n            .catch(e => {\n              console.log(e);\n            });\n\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"border-box\" className=\"submit-form\">\n\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newPhone}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"model\">Model</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter model\"\n                id=\"model\"\n                required\n                value={this.state.model}\n                onChange={this.onChangeModel}\n                name=\"model\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"color\">Color</label>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter color\"\n                  id=\"color\"\n                  required\n                  value={this.state.color}\n                  onChange={this.onChangeColor}\n                  name=\"color\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"memory\">Memory</label>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter memory\"\n                  id=\"memory\"\n                  required\n                  value={this.state.memory}\n                  onChange={this.onChangeMemory}\n                  name=\"memory\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"price\">Price</label>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter price\"\n                  id=\"price\"\n                  required\n                  value={this.state.price}\n                  onChange={this.onChangePrice}\n                  name=\"price\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter description\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"category\">Category</label>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter category\"\n                  id=\"category\"\n                  required\n                  value={this.state.category}\n                  onChange={this.onChangeCategory}\n                  name=\"category\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"image_url\">Image Url</label>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter image url\"\n                  id=\"image_url\"\n                  required\n                  value={this.state.image_url}\n                  onChange={this.onChangeImageUrl}\n                  name=\"image_url\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"numUnits\">Number of units available</label>\n              <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Enter number of units\"\n                  id=\"numUnits\"\n                  required\n                  value={this.state.numUnits}\n                  onChange={this.onChangeNumUnits}\n                  name=\"numUnits\"\n              />\n            </div>\n            <button onClick={this.handleValidation} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n        {(this.state.error !== '')\n            ? <span style={{color: \"red\"}}>{this.state.error}</span>\n            : ''\n        }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}